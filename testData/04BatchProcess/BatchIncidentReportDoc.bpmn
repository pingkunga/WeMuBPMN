<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="1.11.3">
  <bpmn:collaboration id="Collaboration_1bx0p1d">
    <bpmn:participant id="Participant_1xh6gww" name="Incident Report Generator" processRef="BatchIncidentReport" />
  </bpmn:collaboration>
  <bpmn:process id="BatchIncidentReport" isExecutable="true">
    <bpmn:laneSet>
      <bpmn:lane id="Lane_02g5boe" name="System">
        <bpmn:flowNodeRef>StartEvent_1</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_06yo0ub</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_1refgkm</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_1nxw95d</bpmn:flowNodeRef>
      </bpmn:lane>
      <bpmn:lane id="Lane_1grxcnz" name="Customer Service">
        <bpmn:flowNodeRef>ExclusiveGateway_0j0k30d</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_0qoy2fy</bpmn:flowNodeRef>
      </bpmn:lane>
      <bpmn:lane id="Lane_0p52z5q" name="Manager">
        <bpmn:flowNodeRef>Task_1kd29zs</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_1d8gfcg</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>ExclusiveGateway_1or3ik2</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>EndEvent_0svlczt</bpmn:flowNodeRef>
      </bpmn:lane>
    </bpmn:laneSet>
    <bpmn:sequenceFlow id="SequenceFlow_0xsx8g7" name="round 1" sourceRef="ExclusiveGateway_0j0k30d" targetRef="Task_0qoy2fy">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${round == 1}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_126e83l" sourceRef="Task_1kd29zs" targetRef="Task_1d8gfcg" />
    <bpmn:sequenceFlow id="SequenceFlow_1uus2hn" sourceRef="StartEvent_1" targetRef="Task_06yo0ub" />
    <bpmn:sequenceFlow id="SequenceFlow_1qqlq13" name="round 2&#10;&#10;" sourceRef="ExclusiveGateway_0j0k30d" targetRef="Task_1kd29zs">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${round == 2}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1nm6z1l" sourceRef="Task_1nxw95d" targetRef="ExclusiveGateway_0j0k30d" />
    <bpmn:sequenceFlow id="SequenceFlow_0z0i428" sourceRef="Task_1refgkm" targetRef="Task_1nxw95d" />
    <bpmn:startEvent id="StartEvent_1" name="Timer Start">
      <bpmn:outgoing>SequenceFlow_1uus2hn</bpmn:outgoing>
      <bpmn:timerEventDefinition>
        <bpmn:timeCycle xsi:type="bpmn:tFormalExpression">R2/PT1M</bpmn:timeCycle>
      </bpmn:timerEventDefinition>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="SequenceFlow_146dyyj" sourceRef="Task_06yo0ub" targetRef="Task_1refgkm" />
    <bpmn:sequenceFlow id="SequenceFlow_041lpq2" sourceRef="Task_1d8gfcg" targetRef="ExclusiveGateway_1or3ik2" />
    <bpmn:sequenceFlow id="SequenceFlow_1e2zweo" sourceRef="Task_0qoy2fy" targetRef="ExclusiveGateway_1or3ik2" />
    <bpmn:sequenceFlow id="SequenceFlow_06bp0kp" sourceRef="ExclusiveGateway_1or3ik2" targetRef="EndEvent_0svlczt" />
    <bpmn:scriptTask id="Task_06yo0ub" name="External Variable" scriptFormat="groovy">
      <bpmn:incoming>SequenceFlow_1uus2hn</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_146dyyj</bpmn:outgoing>
      <bpmn:script><![CDATA[//Read Request
import groovy.json.JsonSlurper
def json = new JsonSlurper().parseText( new URL( "http://localhost:3000/tmp/1").text )
Map jsonResult = (Map) json;
round = jsonResult.get("counta")

//out:println "round :" + round ;

//Write Request
def url = new URL("http://localhost:3000/tmp/1").openConnection()
url.setDoOutput(true);
url.setDoInput(true);
url.setRequestMethod('PUT');
url.setRequestProperty('Content-Type', 'application/json');

//def out = new OutputStreamWriter(url.outputStream)

execution.setVariable('round', round);
updateData = "";
if (round >= 2)
{
   out:println "round :" + round ;
   /*
   url.outputStream.withWriter { Writer writer ->
        writer << "{\"counta\":1}"
   }*/
   updateData  = "{\"counta\":1}";
}
else
{
   round = round + 1
   out:println "round x:" + round ;
   /*
   url.outputStream.withWriter { Writer writer ->
        writer << "{\"counta\":" + round + "}"
   }
   */
   updateData  =  "{\"counta\":" + round + "}"
}
def out = new OutputStreamWriter(url.outputStream);
out.write(updateData);
out.close();
String response = url.inputStream.withReader { Reader reader -> reader.text }
out:println response ;]]></bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Task_1refgkm" name="Get Incident">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="groovy"><![CDATA["http://localhost:3000/issues".toString()]]></camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="issueItems">
              <camunda:script scriptFormat="groovy"><![CDATA[import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import groovy.json.JsonBuilder;
import org.camunda.spin.Spin.*;

jsonResponse= connector.getVariable("response");
out:println "jsonResponse :" + jsonResponse;

JsonSlurper jsonSlurper = new JsonSlurper();
Object result = jsonSlurper.parseText(jsonResponse);
//out:println "result:" + result ;
out:println "result1:" + result.size() ;
/*
round = connector.getVariable('round');
if (round == null)
{
    out:println "initial" ;
    connector.setVariable('round', 1);
}
else
{
    out:println "next" ;
    round = round + 1;
    connector.setVariable('round',  round);
}
*/

if (result.size() > 0)
{
   Map jsonResponseMap  = (Map)result[0] ;

   //https://forum.camunda.org/t/http-connector-and-assigning-output-results-to-an-instance-variable/3009
   //Step Value to Process Engine
   connector.setVariable('id', jsonResponseMap.get("id"));
   out:println "id:" + id ;
   //S = Camunda Spin
   //Return Result 
   S(new JsonBuilder(result).toPrettyString());
}
else
{
   out:println "Else"
   connector.setVariable('incidentCount', -1);
   issueItems = "not found";
}]]></camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_146dyyj</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0z0i428</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:scriptTask id="Task_1nxw95d" name="Process Incident" scriptFormat="groovy">
      <bpmn:incoming>SequenceFlow_0z0i428</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1nm6z1l</bpmn:outgoing>
      <bpmn:script><![CDATA[NextDay = (new Date() + 1).format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
execution.setVariable ("NextDay", NextDay);

def emptyMap = [:];

incidentCount = 0;
ItemDesc = "";
Status = "";
for(issueItem in issueItems.elements())
{
      Status = (issueItem.prop("status").stringValue()).toString();
      ItemDesc = ItemDesc + (issueItem.prop("id").numberValue()).toString() + ": ";
      ItemDesc = ItemDesc + (issueItem.prop("subject").stringValue()).toString();
      ItemDesc = ItemDesc + " (" + Status + ")";
      ItemDesc = ItemDesc + "||";
      incidentCount = incidentCount + 1;

      if (emptyMap.containsKey(Status)) {
          emptyMap[Status] = emptyMap[Status] + 1;
      }
      else{
          emptyMap[Status] = 1;
      }
}
out:println "ItemDesc:" + ItemDesc;
out:println "emptyMap:" + emptyMap;
out:println "incidentCount :" + incidentCount ;

execution.setVariable ("emptyMap", emptyMap);
execution.setVariable ("ItemDesc", ItemDesc);]]></bpmn:script>
    </bpmn:scriptTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0j0k30d">
      <bpmn:incoming>SequenceFlow_1nm6z1l</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xsx8g7</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1qqlq13</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:scriptTask id="Task_1kd29zs" name="Create Summary" scriptFormat="groovy">
      <bpmn:incoming>SequenceFlow_1qqlq13</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_126e83l</bpmn:outgoing>
      <bpmn:script><![CDATA[emptyMap = execution.getVariable ("emptyMap");

ItemSummary = "";
for (entry in emptyMap) {
    ItemSummary = ItemSummary + entry.key +  ": " + entry.value;
    ItemSummary = ItemSummary + "||";
}
out:println "ItemSummary:" + ItemSummary;
emptyMap = execution.setVariable ("ItemSummary", ItemSummary);]]></bpmn:script>
    </bpmn:scriptTask>
    <bpmn:userTask id="Task_1d8gfcg" name="View Incident Report Summary">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="ItemDesc" label="ItemDesc" type="string" />
          <camunda:formField id="ItemSummary" label="ItemSummary" type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_126e83l</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_041lpq2</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_1or3ik2">
      <bpmn:incoming>SequenceFlow_041lpq2</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1e2zweo</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_06bp0kp</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:endEvent id="EndEvent_0svlczt">
      <bpmn:extensionElements>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="groovy"><![CDATA[//Read Request
import groovy.json.JsonSlurper
def json = new JsonSlurper().parseText( new URL( "http://localhost:3000/tmp/1").text )
Map jsonResult = (Map) json;
round = jsonResult.get("counta")

//out:println "round :" + round ;

//Write Request
def url = new URL("http://localhost:3000/tmp/1").openConnection()
url.setDoOutput(true);
url.setDoInput(true);
url.setRequestMethod('PUT');
url.setRequestProperty('Content-Type', 'application/json');

//def out = new OutputStreamWriter(url.outputStream)

execution.setVariable('round', round);
updateData = "";
if (round >= 2)
{
   out:println "round :" + round ;
   /*
   url.outputStream.withWriter { Writer writer ->
        writer << "{\"counta\":1}"
   }*/
   updateData  = "{\"counta\":1}";
}
else
{
   round = round + 1
   out:println "round x:" + round ;
   /*
   url.outputStream.withWriter { Writer writer ->
        writer << "{\"counta\":" + round + "}"
   }
   */
   updateData  =  "{\"counta\":" + round + "}"
}
def out = new OutputStreamWriter(url.outputStream);
out.write(updateData);
out.close();
String response = url.inputStream.withReader { Reader reader -> reader.text }
out:println response ;]]></camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_06bp0kp</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:userTask id="Task_0qoy2fy" name="Review Incident Report">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="ItemDesc" label="ItemDesc" type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0xsx8g7</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1e2zweo</bpmn:outgoing>
    </bpmn:userTask>
  </bpmn:process>
  <bpmn:error id="Error_0lufz7q" />
  <bpmn:error id="Error_1fizl6q" name="Error_1bsq1tt" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1bx0p1d">
      <bpmndi:BPMNShape id="Participant_1xh6gww_di" bpmnElement="Participant_1xh6gww">
        <dc:Bounds x="211" y="88" width="751" height="369" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0j0k30d_di" bpmnElement="ExclusiveGateway_0j0k30d" isMarkerVisible="true">
        <dc:Bounds x="601" y="251" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="581" y="305" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_02g5boe_di" bpmnElement="Lane_02g5boe">
        <dc:Bounds x="241" y="88" width="721" height="120" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_1grxcnz_di" bpmnElement="Lane_1grxcnz">
        <dc:Bounds x="241" y="208" width="721" height="117" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_0p52z5q_di" bpmnElement="Lane_0p52z5q">
        <dc:Bounds x="241" y="325" width="721" height="132" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0xsx8g7_di" bpmnElement="SequenceFlow_0xsx8g7">
        <di:waypoint xsi:type="dc:Point" x="651" y="276" />
        <di:waypoint xsi:type="dc:Point" x="699" y="276" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="649.0172413793103" y="253" width="37" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_126e83l_di" bpmnElement="SequenceFlow_126e83l">
        <di:waypoint xsi:type="dc:Point" x="676" y="397" />
        <di:waypoint xsi:type="dc:Point" x="699" y="397" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="642.5" y="376" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1uus2hn_di" bpmnElement="SequenceFlow_1uus2hn">
        <di:waypoint xsi:type="dc:Point" x="314" y="149" />
        <di:waypoint xsi:type="dc:Point" x="332" y="148" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="278" y="127.5" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1qqlq13_di" bpmnElement="SequenceFlow_1qqlq13">
        <di:waypoint xsi:type="dc:Point" x="626" y="301" />
        <di:waypoint xsi:type="dc:Point" x="626" y="357" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="583.5" y="325.78056052474665" width="37" height="36" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_10tvp17_di" bpmnElement="Task_1refgkm">
        <dc:Bounds x="452" y="108" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1nm6z1l_di" bpmnElement="SequenceFlow_1nm6z1l">
        <di:waypoint xsi:type="dc:Point" x="626" y="189" />
        <di:waypoint xsi:type="dc:Point" x="626" y="251" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="596" y="214" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0z0i428_di" bpmnElement="SequenceFlow_0z0i428">
        <di:waypoint xsi:type="dc:Point" x="552" y="148" />
        <di:waypoint xsi:type="dc:Point" x="576" y="149" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="519" y="127.5" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ScriptTask_08fd8ro_di" bpmnElement="Task_1nxw95d">
        <dc:Bounds x="576" y="109" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0diq19p_di" bpmnElement="Task_0qoy2fy">
        <dc:Bounds x="699" y="236" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_10a2k52_di" bpmnElement="Task_1d8gfcg">
        <dc:Bounds x="699" y="357" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ScriptTask_1k08lqx_di" bpmnElement="Task_1kd29zs">
        <dc:Bounds x="576" y="357" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_081zaql_di" bpmnElement="StartEvent_1">
        <dc:Bounds x="278" y="131" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="268" y="172" width="56" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ScriptTask_0zy569s_di" bpmnElement="Task_06yo0ub">
        <dc:Bounds x="332" y="108" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_146dyyj_di" bpmnElement="SequenceFlow_146dyyj">
        <di:waypoint xsi:type="dc:Point" x="432" y="148" />
        <di:waypoint xsi:type="dc:Point" x="452" y="148" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="397" y="127" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_1or3ik2_di" bpmnElement="ExclusiveGateway_1or3ik2" isMarkerVisible="true">
        <dc:Bounds x="826" y="372" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="806" y="426" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_041lpq2_di" bpmnElement="SequenceFlow_041lpq2">
        <di:waypoint xsi:type="dc:Point" x="799" y="397" />
        <di:waypoint xsi:type="dc:Point" x="826" y="397" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="767.5" y="376" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1e2zweo_di" bpmnElement="SequenceFlow_1e2zweo">
        <di:waypoint xsi:type="dc:Point" x="799" y="276" />
        <di:waypoint xsi:type="dc:Point" x="851" y="276" />
        <di:waypoint xsi:type="dc:Point" x="851" y="372" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="780" y="255" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_0svlczt_di" bpmnElement="EndEvent_0svlczt">
        <dc:Bounds x="906" y="379" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="879" y="419" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_06bp0kp_di" bpmnElement="SequenceFlow_06bp0kp">
        <di:waypoint xsi:type="dc:Point" x="876" y="397" />
        <di:waypoint xsi:type="dc:Point" x="906" y="397" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="846" y="376" width="90" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
